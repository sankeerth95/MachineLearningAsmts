#bash command to be given:
#
#python calc_purity.py <k>
#k: number of clusters in k-means.



import numpy as np
import sys
from matplotlib import pyplot as plt


def panic(x):
	print x
	sys.exit()



def get_purity(n_clusters):

	filename = "R15k" + str(n_clusters)

	fd = open(filename, "r")
	
	found = False
	while True:

		line = fd.readline()
		if not line: break
	
		if line=="Classes to Clusters:\n":
			found = True
			break

	if not found:
		panic("Parsing error")
	
	fd.readline()
	fd.readline()

	X = []
	for i in range(15):
	
		line = fd.readline()
		words = line.split(" ")
		
		x=[]
		for word in words[:-2]:
			if word is not '':
				x.append(int(word))
		X.append(x)

	accuracy = 0.0
	while True:

		line = fd.readline()
		if not line: break
		word = line.split()
		if not word: continue
		if word[0]=="Incorrectly":
			accuracy = 100-float(word[5])
			break


	fd.close()


	X = np.array(X)
	print X
	print "\n"
	sums = 1.0*sum(X)
	#print sums

	purity = np.zeros(n_clusters)
	for i in range(n_clusters):
		x = (np.argmax(X[:, i]))
		purity[i] = X[x, i]/sums[i]




	return purity, accuracy


mean_purity = []
accuracy = []
cluster_num = range(21)[1:]
for i in cluster_num:
	purity, acc = get_purity(i)
	mean_purity.append(100*np.mean(purity))
	accuracy.append(acc)


plt.figure(1)
plt.plot(cluster_num, mean_purity)

plt.figure(2)
plt.plot(cluster_num, accuracy)
plt.show()






